{"document": "Tutorials", "section": "Tutorials", "subsection": "Tutorials", "content": "# Tutorials\n\nA tutorial is an experience that takes place under the guidance of a tutor. A tutorial is always learning-oriented.\n\nA tutorial is a practical activity, in which the student learns by doing something meaningful, towards some achievable goal.\n\nA tutorial serves the user\u2019s acquisition of skills and knowledge - their study. Its purpose is not to help the user get something done, but to help them learn.\n\nTutorials - learning-oriented guides that describe practical steps and are intended to serve our study.\nA tutorial in other words is a lesson.\n\nIt\u2019s important to understand that while a student will learn by doing, what the student does is not necessarily what they learn. Through doing, they will acquire theoretical knowledge (i.e. facts), understanding, familiarity. They will learn how things relate to each other and interact, and how to interact with them. They will learn the names of things, the use of tools, workflows, concepts, commands. And so on.\n"}
{"document": "Tutorials", "section": "The Tutorial As A Lesson", "subsection": "The Tutorial As A Lesson", "content": "## The tutorial as a lesson\n\nA lesson entails a relationship between a teacher and a pupil. In all learning of this kind, learning takes place as the pupil applies themself to tasks under the instructor\u2019s guidance.\n\nA lesson is a learning experience. In a learning experience, what matters is what the learner does and what happens. By contrast, the teacher\u2019s explanations and recitations of fact are far less important.\n\nA good lesson gives the learner confidence, by showing them that they can be successful in a certain skill or with a certain product.\n"}
{"document": "Tutorials", "section": "The Tutorial As A Lesson", "subsection": "Obligations Of The Teacher", "content": "### Obligations of the teacher\n\nIt\u2019s not easy being a teacher.\n\nA lesson is a kind of contract between teacher and student, in which nearly all the responsibility falls upon the teacher. The teacher has responsibility for what the pupil is to learn, what the pupil will do in order to learn it, and for the pupil\u2019s success. Meanwhile, the only responsibility of the pupil in this contract is to be attentive and to follow the teacher\u2019s directions as closely as they can. There is no responsibility on the pupil to learn, understand or remember.\n\nAt the same time, the exercise you put your pupils through must be:\n\nmeaningful - the pupil needs to have a sense of achievement\n\nsuccessful - the pupil needs to be able to complete it\n\nlogical - the path that the pupil takes through it needs to make sense\n\nusefully complete - the pupil must have an encounter with all of the actions, concepts and tools they need to become familiar with\n"}
{"document": "Tutorials", "section": "The Tutorial As A Lesson", "subsection": "The Problem of Tutorials", "content": "### The problem of tutorials\n\nIn general, tutorials are rarely done well, partly because they are genuinely difficult to do well, and partly because they are not well understood. In software, many products lack good tutorials, or lack tutorials completely; tutorials are often conflated with how-to guides.\n\nIn an ideal lesson, the teacher is present and interacts with and responds to the student, correcting their mistakes and checking their learning. In documentation, none of this is possible.\n\nWriting and maintaining tutorials can consume a remarkable amount of effort and time.\n\nIt\u2019s hard enough to put together a learning experience that meets all the standards described above; in many contexts the product itself evolves rapidly, meaning that all that work needs to be done again to ensure that the tutorial still performs its required functions.\n\nYou will also often find that no other part of your documentation is subject to revisions the way your tutorials are. Elsewhere in documentation, changes and improvements can generally be made discretely; in tutorials, where the end-to-end learning journey must make sense, they often cascade through the entire story.\n\nFinally, tutorials contain the additional complication of the distinction between what is to be learned and what is to be done. Not only must the creator of a tutorial have a good sense of what the user must learn, and when, they must also devise a meaningful learning journey that somehow delivers all that."}
{"document": "Tutorials", "section": "Key Principles", "subsection": "Key Principles", "content": "## Key principles\n\nA tutorial is a pedagogical problem.\n\nIt\u2019s not an easy problem, but neither is it a mystery. The principles outlined below - repetition, action, small steps, results early and often, concreteness and so on - are not secrets, but they are not always well understood.\n\nStill, there are straightforward, effective ways to address the problems of pedagogy in practice.\n"}
{"document": "Tutorials", "section": "Key Principles", "subsection": "Anti-Pedagogical Temptations", "content": "Anti-pedagogical temptations\n\nabstraction, generalisation\n\nexplanation\n\nchoices\n\ninformation\n\nThe first rule of teaching is simply: don\u2019t try to teach. Your job, as a teacher, is to provide the learner with an experience that will allow them to learn. A teacher inevitably feels a kind of anxiety to impart knowledge and understanding, but if you give into it and try to teach by telling and explaining, you will jeopardise the learning experience.\n\nInstead, allow learning to take place, and trust that it will. Give your learner things to do, through which they can learn. Only your pupil can learn. Sadly, however much you desire it, you will not be able to learn for your pupil. You cannot make them learn. All you can do is make it so they can learn.\n\n### Show the learner where they\u2019ll be going\n\nIt\u2019s important to allow the learner to form an idea of what they will achieve right from the start. As well as helping to set expectations, it allows them to see themselves building towards the completed goal as they work.\n\nProviding the picture the learner needs in a tutorial can be as simple as informing them at the outset: In this tutorial we will create and deploy a scalable web application. Along the way we will encounter containerisation tools and services.\n\nThis is not the same as saying: In this tutorial you will learn\u2026 - which is presumptuous and a very poor pattern.\n"}
{"document": "Tutorials", "section": "Key Principles", "subsection": "Deliver Visible Results Early And Often", "content": "### Deliver visible results early and often\n\nYour learner is probably doing new and strange things that they don\u2019t fully understand. Understanding comes from being able to make connections between causes and effects, so let them see the results and make the connections rapidly and repeatedly. Each one of those results should be something that the user can see as meaningful.\n\nEvery step the learner follows should produce a comprehensible result, however small.\n"}
{"document": "Tutorials", "section": "Key Principles", "subsection": "Maintain a Narrative of the Expected", "content": "### Maintain a narrative of the expected\n\nAt every step of a tutorial, the user experiences a moment of anxiety: will this action produce the correct result? Part of the work of a successful tutorial is to keep providing feedback to the learner that they are indeed on the right path.\n\nKeep up a narrative of expectations: \u201cYou will notice that \u2026\u201d; \u201cAfter a few moments, the server responds with \u2026\u201d. Show the user actual example output, or even the exact expected output.\n\nIf you know know in advance what the likely signs of going wrong are, consider flagging them: \u201cIf the output doesn\u2019t show \u2026, you have probably forgotten to \u2026\u201d.\n\nIt\u2019s helpful to prepare the user for possibly surprising actions: \u201cThe command will probably return several hundred lines of logs in your terminal.\u201d\n"}
{"document": "Tutorials", "section": "Key Principles", "subsection": "Point Out What The Learner Should Notice", "content": "### Point out what the learner should notice\n\nLearning requires reflection. This happens at multiple levels and depths, but one of the first is when the learner observes the signs in their environment. In a lesson, a learner is typically too focused on what they are doing to notice them, unless they are prompted by the teacher.\n\nYour job as teacher is to close the loops of learning by pointing things out, in passing, as the lesson moves along. This can be as simple as pointing out how a command line prompt changes, for example.\n\nObserving is an active part of a craft, not a merely passive one. It means paying attention to the environment, a skill in itself. It\u2019s often neglected.\n"}
{"document": "Tutorials", "section": "Key Principles", "subsection": "Target the Feeling of Doing", "content": "### Target the feeling of doing\n\nIn all skill or craft, the accomplished practitioner experiences a feeling of doing, a joined-up purpose, action, thinking and result.\n\nAs skill develops, it flows in a confident rhythm and becomes a kind of pleasure. It\u2019s the pleasure of walking, for example.\n\nPay attention to your own feeling of doing in your work. What is it like to perform a particular operation?\n\nYour learner\u2019s skill depends upon their discovering this feeling, and its becoming a pleasure.\n\nYour challenge as the creator of a tutorial is to ensure that its tasks tie together purpose and action so they become a cradle for this feeling.\n"}
{"document": "Tutorials", "section": "Key Principles", "subsection": "Encourage and Permit Repetition", "content": "### Encourage and permit repetition\n\nLearners will return to and repeat an exercise that gives them success, for the pleasure they find in getting the expected result. Doing so reaffirms to them that they can do it, and that it works.\n\nRepetition is a key to establishing the feeling to doing; being at home with that feeling is a foundational layer of learning.\n\nRepetition is not the best teacher - sometimes it\u2019s the only teacher.\n\nIn your tutorial, try to make it possible for a particular step and result to be repeated. This can be difficult, for example in operations that are not reversible (making it hard to go back to a previous step) - but seek it wherever you can. Watching a user follow a tutorial, you may often be amazed to see how often they choose to repeat a step. They are doing it just to see that the same thing really does happen again.\n"}
{"document": "Tutorials", "section": "Key Principles", "subsection": "Ruthlessly Minimize Explanation", "content": "### Ruthlessly minimise explanation\n\nA tutorial is not the place for explanation. In a tutorial, the user is focused on correctly following your directions and getting the expected results. Later, when they are ready, they will seek explanation, but right now they are concerned with doing. Explanation distracts their attention from that, and blocks their learning.\n\nFor example, it\u2019s quite enough to say something like: We\u2019re using HTTPS because it\u2019s more secure. There is a place for extended discussion and explanation of HTTPS, but not now. Instead, provide a link or reference to that explanation, so that it\u2019s available, but doesn\u2019t get in the way.\n\nExplanation is only pertinent at the moment the user wants it. It is not for the documentation author to decide.\n\nExplanation is one of the hardest temptations for a teacher to resist; even experienced teachers find it difficult to accept that their students\u2019 learning does not depend on explanation. This is perfectly natural. Once we have grasped something, we rely on the power of abstraction to frame it to ourselves - and that\u2019s how we want to frame it to others. Understanding means grasping general ideas, and abstraction is the logical form of understanding - but these are not what we need in a tutorial, and it\u2019s not how successful learning or teaching works.\n\nOne must see it for oneself, to see the focused attention of a student dissolve into air, when a teacher\u2019s well-intentioned explanation breaks the magic spell of learning.\n"}
{"document": "Tutorials", "section": "Key Principles", "subsection": "And Focus on the Concrete", "content": "### \u2026 and focus on the concrete\n\nIn a learning situation, your student is in the moment, a moment composed of concrete things. You are responsible for setting up and maintaining the student\u2019s flow, from one concrete action and result to another.\n\nFocus on this problem, this action, this result, in such a way that you lead the learner from step to concrete step.\n\nIt might seem that by maintaining focus on the concrete and particular that you deny the student the opportunity to see or grasp the larger general patterns, but the contrary is true. The one thing our minds do spectacularly well is to perceive general patterns from concrete examples. All learning moves in one direction: from the concrete and particular, towards the general and abstract. The latter will emerge from the former.\n"}
{"document": "Tutorials", "section": "Key Principles", "subsection": "Ignore Options and Alternatives", "content": "### Ignore options and alternatives\n\nYour job is to guide the learner to a successful conclusion. There may be many interesting diversions along the way (different options for the command you\u2019re using, different ways to use the API, different approaches to the task you\u2019re describing) - ignore them. Your guidance needs to remain focused on what\u2019s required to reach the conclusion, and everything else can be left for another time.\n\nDoing this helps keep your tutorial shorter and crisper, and saves both you and the reader from having to do extra cognitive work.\n"}
{"document": "Tutorials", "section": "Key Principles", "subsection": "Aspire To Perfect Reliability", "content": "### Aspire to perfect reliability\n\nAll of the above are general principles of pedagogy, but there is a special burden on the creator of a tutorial.\n\nA tutorial must inspire confidence. Confidence can only be built up layer by layer, and is easily shaken. At every stage, when you ask your student to do something, they must see the result you promise. A learner who follows your directions and doesn\u2019t get the expected results will quickly lose confidence, in the tutorial, the tutor and themselves.\n\nYou are required to be present, but condemned to be absent.\n\nA teacher who\u2019s there with the learner can rescue them when things go wrong. In a tutorial, you can\u2019t do that. Your tutorial ought to be so well constructed that things can\u2019t go wrong, that your tutorial works every user, every time.\n\nIt\u2019s hard work to create a reliable experience, but that is what you must aspire to in creating a tutorial.\n\nYour tutorial will have flaws and gaps, however carefully it is written. You won\u2019t discover them all by yourself, you will have to rely on users to discover them for you. The only way to learn what they are is by finding out what actually happens when users do the tutorial, through extensive testing and observation."}
{"document": "Tutorials", "section": "The Language of Tutorials", "subsection": "The Language of Tutorials", "content": "## The language of tutorials\n\nWe \u2026\nThe first-person plural affirms the relationship between tutor and learner: you are not alone; we are in this together.\n\nIn this tutorial, we will \u2026\nDescribe what the learner will accomplish.\n\nFirst, do x. Now, do y. Now that you have done y, do z.\nNo room for ambiguity or doubt.\n\nWe must always do x before we do y because\u2026 (see Explanation for more details).\nProvide minimal explanation of actions in the most basic language possible. Link to more detailed explanation.\n\nThe output should look something like \u2026\nGive your learner clear expectations.\n\nNotice that \u2026 Remember that \u2026 Let\u2019s check \u2026\nGive your learner plenty of clues to help confirm they are on the right track and orient themselves.\n\nYou have built a secure, three-layer hylomorphic stasis engine\u2026\nDescribe (and admire, in a mild way) what your learner has accomplished."}